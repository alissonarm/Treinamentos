Comando
ls -a : Listar arquivos e pastas ocultas;
mv Arquivo CaminhoDestinho ==> copiar arquivso



1) pwd: informações do diretório atual;
2) ls: lista os arquivos;
2.a) ls -la : lista todos arquivo e diretórios ocultos;
2.b) ls -l : lista tamanhos, datas e tipos de arquivos;
2.c) ls / : lista o diretório raiz;
c.d)ls /home: lista o diretório dos usuários da maquina;
3) echo : imprime mensagens no terminal.
3.a) echo "Bem vindo" : saida no terminal;
3.b) echo "Bem vindo" > bemvindo.txt : a saída é no arquivo criado;  o operador ">" modifica o destino da mensagem;
3.c) echo "segunda linha" >> bemvindo.txt: adiciona outra linha;
4) cat: lista o arquvo no terminal; cat bemvindo.txt
4.a) cat -v: apresenta caracteres escondidos(quebras de linhas);
4.b) cat -n: apresenta as linhas além do conteúdo do arquivo;
5) clear : limpar a tela;
6 ) man : apresenta o help dos comando;
7) whoami: retorna o nome do usuário no linux;
8) cd : navegar para o diretório base;
8.a) cd . : navegar para o diretório atual;
8.b) cd..: navegar para o diretório anterior;
9)mkdir : criar diretório;
10) rmdir : apaga diretório vazio;
10.a) rm arquivo: apaga arquivo;
10.b) rm -r diretório/ : apaga tudo arquivos e o diretório;
11) cp msg.txt bv.txt : copiar arquivo;
11.a) cp /home/f0500025/Downloads/settings.xml settings.xml -- copiar arquivo
11.a) cp -r diretorio1 diretorio2 : copiar diretórios; 
12) mv msg.txt msg2.txt : renomeia o arquivo;
13) zip -r work.zip diretorio/ : zipar todo o diretório; 
13.a) zip -rq work.zip workspace : zipar todo o diretório sem as mensagens;
14) unzip work.zip: descompactar o arquivo selecionado;
14.a) unzip -q work.zip : descompactar whoasem as mensagens;
14.b) unzip -l work.zip : listar arquivos zipados
15) tar -cz diretorio > work.tar.gz : outro comando de compactação;
15.a) tar -czf work.tar.gz diretorio
16) tar-xz < work.tar.gz : comando de descompactação;
16.a) tar -xzf work.tar.gz : comando de descompactação;
16.b) tar -vxzf work.tar.gz : comando de descompactação;
17) touch arquivo.txt: muda a data do arquivo;
18) head -n 3 google.txt: ler as 3 primeiras linhas;
19) tail -n 3 google.txt: ler as ultimas 3 linhas;
20) less google.txt : permite navegar atraves de setas;
21) vi google.txt : editor de texto do linux;

Resumindo os comandos que vimos do VI, até agora temos:
Setas: para navegação
i: inclui (na posição atual)
a: adiciona (na posição posterior)
Shift+A: adiciona (fim da linha)
x: remove caracteres (n* x remove *n caracteres)
dd: remove uma linha (n* dd remove *n linhas)

Para voltarmos à navegação e saírmos do modo de inclusão, pressionamos a tecla ESC. Para salvarmos essas alterações usamos o comando :w e para sair do VI, digitamos :q.

Podemos juntar os comandos de salvar e sair em apenas um comando: :wq. Se quisermos sair sem salvar, precisamos usar o comando :q!.



====================== 

1) man top  ==> apresenta informações sobre determinado comando. 

1) ps     ==> Apresenta os processos que estão sendo executados.

2) ps -e  ==> Apresenta todos os processos do linux
   ps -ef ==> Apresenta todos os processos do linux com detalhes 
   ps -ef | grep firefox ==> O programa grep pega a saida do comando (ps -ef) e filtra procurando o processo firefox  
   pstree   ==> apresenta a árvore de processos

3) cat google.txt | grep "Larry Page and Sergey Brin"  ==> Imprime, no terminal, as linhas que contêm o termo "Larry Page and Sergey Brin" do arquivo google.txt

4) kill ID_PROCESSO    ==> Solicita o encerramento do processo informando o numero identificador. 
   kill -9 ID_PROCESSO ==> Força o encerramento do processo.  
   killall firefox     ==> Solicita o encerramento de todos os processos com o firefox;
   killall -9 firefox  ==> Força o encerramento de todos os processos com firefox.   

5) top ==> Informa o consumo de cpu
   top -u lucas ==> Para mostrar apenas os processos de um determinado usuário 
   
6) jobs: mostra os processos que estão sendo executados dentro do bash;

7) fg e bg: jogam os processos para foreground e background, respectivamente;

8) [programa] &: abre o [programa] diretamente em background;

9) gedit dorme &:  Criar um arquivo de gedit, já em background, com o nome dorme;

10) sh dorme : solicita que o bash execute o arquivo;

11) chmod +x dorme: atribui a permissão de execução(x);
    chmod --> muda as permissões

12) whoami : descobrir o usuario atual;

13) ls -l: listar as permissões;
    ls -l /usr --> listar as permissões da pasta /usr

14) locate firefox: pesquisa a palavra firefox;

15) sudo updatedb: atualizar o banco de dados interno com o nome dos arquivos.
    Para executar um programa como super usuário, ou seja, como usuário principal da máquina usamos o comando sudo antes do comando a ser executado;
	
16) which firefox --> procurar o local diretorio do firefox	

17) passwd --> muda a senha do usuario 

18) sudo passwd --> muda a senha do usuario root

19) su usuario --> se loga com outro usuario 

20) adduser jose --> adicionar o usuario jose

21) variaveis de ambiente PATH: 
    env --> lista as váriaveis de ambiente;
	env | grep PATH --> lista 
	PATH=$PATH:/home/guilherme/workspace --> adiciona o caminho no path atual; 

22) gedit .bashrc & --> editar o arquivo no modo background;

23) sudo apt-get update --> atualiza os programas instalados

24) apt-cache search ftp --> Este comando busca na lista de pacotes disponíveis, qualquer programa que se encaixe nesse termo de busca, por isso retorna uma longa lista de programas.

25) sudo apt-get install vsftpd --> instalar o programa vsftpd

26) sudo apt-get remove vsftpd --> remove o programa instalados

27) sudo dpkg -i vsftpd_3.0.2-17+deb8u1_i386.deb --> instalar o programa (-i -> indica instalando)

28) sudo dpkg -r [nome do pacote] --> remover o pacote

29) ps -ef | grep vsftpd --- listar vsftpd
    sudo service vsftpd stop --> parar a execução do programa
    sudo service vsftpd start --> iniciar a execução do programa	

30) Portanto, existem basicamente três passos para instalar um programa a partir de seu código fonte:
    a) ./configure -> para verificar as dependências e configurações da máquina.
    b) make -> para gerar o programa, ou seja, compilar. Lembrando que, neste passo, pode haver outras dependências necessárias para a tarefa e por isso talvez seja preciso realizar instalações de outras bibliotecas.
    c) sudo make install -> para que o programa seja instalado em nossa máquina. Lembrando que o sudo é necessário por causa de questões de permissão.

	
